[package]
name = "simly_rust_wasm"
version = "0.1.0"
authors = ["Anton Schreiner <antonschrein@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib"]

[features]
# default = ["console_error_panic_hook"]

[dependencies]
regex = "1"
lazy_static = "1"
image = "*"
wasm-bindgen = "0.2.64"
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
base64 = "0.10.1"
png = "0.14.1"

[dependencies.web-sys]
features = [
  'console',
  'CanvasRenderingContext2d',
  'Document',
  'EventTarget',
  'Element',
  'HtmlCanvasElement',
  'HtmlVideoElement',
  'HtmlElement',
  'ImageData',
  'MediaStream',
  'MessageEvent',
  'Performance',
  'RtcDataChannel',
  'RtcDataChannelEvent',
  'Window',
]
version = "0.3.40"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

[dev-dependencies]
futures = "0.1.27"
js-sys = "0.3.40"
wasm-bindgen-futures = "0.3.22"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
debug = true
